name: Deploy and CodeSandbox Integration

on:
  pull_request:
    types: [opened, synchronize] # For adding CodeSandbox links to PRs
  push:
    branches:
      - main # For deployment after merge to main

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  # Job to add CodeSandbox link to PR
  add_codesandbox_link:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Add CodeSandbox Link
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.issue.number;
            const repo = context.repo;

            // Get the PR to access the head ref
            const { data: pullRequest } = await github.rest.pulls.get({
              ...repo,
              pull_number: prNumber
            });

            const branch = pullRequest.head.ref;

            const codesandboxUrl = `https://githubbox.com/${repo.owner}/${repo.repo}/tree/${branch}`;

            const body = `### ðŸš€ Preview Link
            You can preview these changes in CodeSandbox: [Open in CodeSandbox](${codesandboxUrl})

            This link was automatically generated to help with code review.`;

            // Create or update comment
            try {
              // Check if a comment with the CodeSandbox link already exists
              const { data: comments } = await github.rest.issues.listComments({
                ...repo,
                issue_number: prNumber
              });
              
              const existingComment = comments.find(comment => 
                comment.body.includes('Open in CodeSandbox') && 
                comment.user.login === 'github-actions[bot]'
              );
              
              if (existingComment) {
                await github.rest.issues.updateComment({
                  ...repo,
                  comment_id: existingComment.id,
                  body: body
                });
                console.log('Updated existing comment');
              } else {
                await github.rest.issues.createComment({
                  ...repo,
                  issue_number: prNumber,
                  body: body
                });
                console.log('Created new comment');
              }
            } catch (error) {
              console.log('Error posting comment:', error);
              
              // Alternative approach: add a PR review comment at the file level
              try {
                await github.rest.pulls.createReview({
                  ...repo,
                  pull_number: prNumber,
                  body: body,
                  event: 'COMMENT'
                });
                console.log('Added PR review comment');
              } catch (reviewError) {
                console.log('Error posting review comment:', reviewError);
              }
            }

  # Job to deploy after code is merged to main
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          CI: false # This prevents the build from failing on warnings

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build # The folder the action should deploy (for React apps, typically "build")
          branch: gh-pages # The branch the action should deploy to
